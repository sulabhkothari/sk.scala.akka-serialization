akka {
    actor {
        provider = remote

        serializers {
            java = "akka.serialization.JavaSerializer"
            kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
            avro = "serialization.VoteAvroSerializer"
            proto = "akka.remote.serialization.ProtobufSerializer"
        }

        serialization-bindings {
            "serialization.VoteEnd$" = java
            "com.google.protobuf.Message" = proto
            "serialization.Vote" = kryo
        }

        kryo {
            type = "nograph"
            idstrategy = "incremental"
            kryo-trace = false
            implicit-registration-logging = false
            use-manifests = false
            classes = [
                "serialization.Vote",
                "serialization.VoteEnd$"
            ]
        }
    }

    remote {
        artery {
            enabled = on
            transport = aeron-udp
            canonical.hostname = "localhost"
            advanced {
                outbound-message-queue-size = 1000100
            }
        }
    }
}